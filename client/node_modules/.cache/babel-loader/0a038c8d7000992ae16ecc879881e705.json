{"ast":null,"code":"import _regeneratorRuntime from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/src/components/SignupFields/SignupFields.jsx\";\n\nimport React, { useRef } from \"react\";\n\nvar SignupFields = function SignupFields() {\n  var nameRef = useRef();\n  var emailRef = useRef();\n  var passwordRef = useRef();\n  var confirmPasswordRef = useRef();\n\n  function registerAccount() {\n    return _registerAccount.apply(this, arguments);\n  }\n\n  function _registerAccount() {\n    _registerAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var nameValue, emailValue, passwordValue, confirmPasswordValue, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              nameValue = nameRef.current.value;\n              emailValue = emailRef.current.value;\n              passwordValue = passwordRef.current.value;\n              confirmPasswordValue = confirmPasswordRef.current.value;\n\n              if (!(passwordValue === confirmPasswordValue)) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 7;\n              return fetch(\"http://localhost:8000/api/register\", {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  nameValue: nameValue,\n                  emailValue: emailValue,\n                  passwordValue: passwordValue\n                })\n              });\n\n            case 7:\n              response = _context.sent;\n              _context.next = 10;\n              return response.json();\n\n            case 10:\n              data = _context.sent;\n              console.log(data);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _registerAccount.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signup-fields\",\n    onSubmit: registerAccount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup-inputs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Full name\",\n    ref: nameRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    ref: emailRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    ref: passwordRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    ref: confirmPasswordRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"signup-btn\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Sign up\"));\n};\n\nexport default SignupFields;","map":{"version":3,"sources":["/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/src/components/SignupFields/SignupFields.jsx"],"names":["React","useRef","SignupFields","nameRef","emailRef","passwordRef","confirmPasswordRef","registerAccount","nameValue","current","value","emailValue","passwordValue","confirmPasswordValue","fetch","headers","body","JSON","stringify","response","json","data","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,OAAO,GAAGF,MAAM,EAAtB;AACA,MAAMG,QAAQ,GAAGH,MAAM,EAAvB;AACA,MAAMI,WAAW,GAAGJ,MAAM,EAA1B;AACA,MAAMK,kBAAkB,GAAGL,MAAM,EAAjC;;AAJyB,WAMVM,eANU;AAAA;AAAA;;AAAA;AAAA,gFAMzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,SADR,GACoBL,OAAO,CAACM,OAAR,CAAgBC,KADpC;AAEQC,cAAAA,UAFR,GAEqBP,QAAQ,CAACK,OAAT,CAAiBC,KAFtC;AAGQE,cAAAA,aAHR,GAGwBP,WAAW,CAACI,OAAZ,CAAoBC,KAH5C;AAIQG,cAAAA,oBAJR,GAI+BP,kBAAkB,CAACG,OAAnB,CAA2BC,KAJ1D;;AAAA,oBAMME,aAAa,KAAKC,oBANxB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAO2BC,KAAK,CAAC,oCAAD,EAAuC;AACjEC,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB,iBADwD;AAEjEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,kBAAAA,SAAS,EAATA,SAAF;AAAaG,kBAAAA,UAAU,EAAVA,UAAb;AAAyBC,kBAAAA,aAAa,EAAbA;AAAzB,iBAAf;AAF2D,eAAvC,CAPhC;;AAAA;AAOUO,cAAAA,QAPV;AAAA;AAAA,qBAYuBA,QAAQ,CAACC,IAAT,EAZvB;;AAAA;AAYUC,cAAAA,IAZV;AAaIC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANyB;AAAA;AAAA;;AAuBzB,sBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,QAAQ,EAAEd,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,WAA/B;AAA2C,IAAA,GAAG,EAAEJ,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAuC,IAAA,GAAG,EAAEC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,UAAnC;AAA8C,IAAA,GAAG,EAAEC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,GAAG,EAAEC,kBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAWE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,CADF;AAiBD,CAxCD;;AA0CA,eAAeJ,YAAf","sourcesContent":["import React, { useRef } from \"react\";\n\nconst SignupFields = () => {\n  const nameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n\n  async function registerAccount() {\n    const nameValue = nameRef.current.value;\n    const emailValue = emailRef.current.value;\n    const passwordValue = passwordRef.current.value;\n    const confirmPasswordValue = confirmPasswordRef.current.value;\n\n    if (passwordValue === confirmPasswordValue) {\n      const response = await fetch(\"http://localhost:8000/api/register\", {\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ nameValue, emailValue, passwordValue }),\n      });\n\n      const data = await response.json();\n      console.log(data);\n    }\n  }\n\n  return (\n    <form className=\"signup-fields\" onSubmit={registerAccount}>\n      <div className=\"signup-inputs\">\n        <input type=\"text\" placeholder=\"Full name\" ref={nameRef} />\n        <input type=\"text\" placeholder=\"Email\" ref={emailRef} />\n        <input type=\"password\" placeholder=\"Password\" ref={passwordRef} />\n        <input\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          ref={confirmPasswordRef}\n        />\n      </div>\n      <button className=\"signup-btn\" type=\"submit\">\n        Sign up\n      </button>\n    </form>\n  );\n};\n\nexport default SignupFields;\n"]},"metadata":{},"sourceType":"module"}