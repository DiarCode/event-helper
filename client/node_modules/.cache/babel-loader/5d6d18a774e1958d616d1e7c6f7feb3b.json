{"ast":null,"code":"import _regeneratorRuntime from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\nimport { storage } from \"../../firebase/firebase.config\";\n\nfunction uploadAndGetURL(_x) {\n  return _uploadAndGetURL.apply(this, arguments);\n}\n\nfunction _uploadAndGetURL() {\n  _uploadAndGetURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file) {\n    var storageRef, imageURL;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            storageRef = ref(storage, \"/adviceImages/\".concat(file.name + v4()));\n\n            if (file) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", alert(\"No file uploaded\"));\n\n          case 3:\n            _context2.next = 5;\n            return uploadBytes(storageRef, file).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              var url;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      _context.next = 3;\n                      return getDownloadURL(storageRef);\n\n                    case 3:\n                      url = _context.sent;\n                      alert(\"Successfully uploaded!\");\n                      return _context.abrupt(\"return\", url);\n\n                    case 8:\n                      _context.prev = 8;\n                      _context.t0 = _context[\"catch\"](0);\n                      return _context.abrupt(\"return\", console.log(_context.t0));\n\n                    case 11:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[0, 8]]);\n            }))).catch(function (error) {\n              return console.log(error);\n            });\n\n          case 5:\n            imageURL = _context2.sent;\n            return _context2.abrupt(\"return\", imageURL);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _uploadAndGetURL.apply(this, arguments);\n}\n\nexport { uploadAndGetURL };","map":{"version":3,"sources":["/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/src/components/Helpers/adminHelperMethods.js"],"names":["getDownloadURL","ref","uploadBytes","v4","storage","uploadAndGetURL","file","storageRef","name","alert","then","url","console","log","catch","error","imageURL"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,GAAzB,EAA8BC,WAA9B,QAAiD,kBAAjD;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,OAAT,QAAwB,gCAAxB;;SAEeC,e;;;;;8EAAf,kBAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,UADR,GACqBN,GAAG,CAACG,OAAD,0BAA2BE,IAAI,CAACE,IAAL,GAAYL,EAAE,EAAzC,EADxB;;AAAA,gBAEOG,IAFP;AAAA;AAAA;AAAA;;AAAA,8CAEoBG,KAAK,CAAC,kBAAD,CAFzB;;AAAA;AAAA;AAAA,mBAIyBP,WAAW,CAACK,UAAD,EAAaD,IAAb,CAAX,CACpBI,IADoB,wEACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEoBV,cAAc,CAACO,UAAD,CAFlC;;AAAA;AAEQI,sBAAAA,GAFR;AAGEF,sBAAAA,KAAK,CAAC,wBAAD,CAAL;AAHF,uDAISE,GAJT;;AAAA;AAAA;AAAA;AAAA,uDAMSC,OAAO,CAACC,GAAR,aANT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADe,IAUpBC,KAVoB,CAUd,UAAAC,KAAK;AAAA,qBAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAJ;AAAA,aAVS,CAJzB;;AAAA;AAIQC,YAAAA,QAJR;AAAA,8CAgBSA,QAhBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBA,SAASX,eAAT","sourcesContent":["import { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\nimport { storage } from \"../../firebase/firebase.config\";\n\nasync function uploadAndGetURL(file) {\n  const storageRef = ref(storage, `/adviceImages/${file.name + v4()}`);\n  if (!file) return alert(\"No file uploaded\");\n\n  const imageURL = await uploadBytes(storageRef, file)\n    .then(async () => {\n      try {\n            const url = await getDownloadURL(storageRef);\n            alert(\"Successfully uploaded!\");\n            return url;\n        } catch (error) {\n            return console.log(error);\n        }\n    })\n    .catch(error => console.log(error));\n\n  return imageURL;\n}\n\nexport { uploadAndGetURL };\n"]},"metadata":{},"sourceType":"module"}