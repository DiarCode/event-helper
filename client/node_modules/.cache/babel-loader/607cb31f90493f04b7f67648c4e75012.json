{"ast":null,"code":"import _regeneratorRuntime from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar deleteEventService = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(process.env.REACT_APP_EVENT_DELETE_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function deleteEventService(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar createNewEventService = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(eventName, eventDescription, eventDate, uid) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(process.env.REACT_APP_NEW_EVENT_FETCH_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventName: eventName,\n                eventDescription: eventDescription,\n                eventDate: eventDate,\n                uid: uid\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function createNewEventService(_x2, _x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar deleteNoteService = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, title) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(process.env.REACT_APP_NOTE_DELETE_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id,\n                noteTitle: title\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function deleteNoteService(_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar deleteMealService = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id, title) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(process.env.REACT_APP_NOTE_DELETE_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id,\n                noteTitle: title\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function deleteMealService(_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar deleteGuestService = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id, name) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(process.env.REACT_APP_GUEST_DELETE_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id,\n                guestName: name\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function deleteGuestService(_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar createNewNoteService = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id, titleValue, bodyValue) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return fetch(process.env.REACT_APP_CREATE_NOTE_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id,\n                noteTitle: titleValue,\n                noteBody: bodyValue\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function createNewNoteService(_x12, _x13, _x14) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar createNewGuestService = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(id, nameValue, seatValue) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return fetch(process.env.REACT_APP_CREATE_GUEST_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id,\n                guestName: nameValue,\n                guestSeat: seatValue\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context7.sent;\n            return _context7.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function createNewGuestService(_x15, _x16, _x17) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar changeDateService = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id, newDate) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return fetch(process.env.REACT_APP_CHANGE_DATE_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id,\n                newDate: newDate\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context8.sent;\n            return _context8.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function changeDateService(_x18, _x19) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar createNewMealService = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(id, serveValue, nameValue) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return fetch(process.env.REACT_APP_CREATE_MEAL_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id,\n                mealServe: serveValue,\n                mealName: nameValue\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context9.sent;\n            return _context9.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function createNewMealService(_x20, _x21, _x22) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nexport { deleteEventService, createNewEventService, deleteNoteService, createNewNoteService, createNewGuestService, deleteGuestService, changeDateService, createNewMealService };","map":{"version":3,"sources":["/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/src/components/Helpers/helperMethods.js"],"names":["deleteEventService","id","fetch","process","env","REACT_APP_EVENT_DELETE_URL","method","headers","body","JSON","stringify","eventID","then","res","json","response","createNewEventService","eventName","eventDescription","eventDate","uid","REACT_APP_NEW_EVENT_FETCH_URL","deleteNoteService","title","REACT_APP_NOTE_DELETE_URL","noteTitle","deleteMealService","deleteGuestService","name","REACT_APP_GUEST_DELETE_URL","guestName","createNewNoteService","titleValue","bodyValue","REACT_APP_CREATE_NOTE_URL","noteBody","createNewGuestService","nameValue","seatValue","REACT_APP_CREATE_GUEST_URL","guestSeat","changeDateService","newDate","REACT_APP_CHANGE_DATE_URL","createNewMealService","serveValue","REACT_APP_CREATE_MEAL_URL","mealServe","mealName"],"mappings":"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","sourcesContent":["const deleteEventService = async id => {\n  const response = await fetch(process.env.REACT_APP_EVENT_DELETE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ eventID: id }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst createNewEventService = async (\n  eventName,\n  eventDescription,\n  eventDate,\n  uid\n) => {\n  const response = await fetch(process.env.REACT_APP_NEW_EVENT_FETCH_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      eventName: eventName,\n      eventDescription: eventDescription,\n      eventDate: eventDate,\n      uid: uid,\n    }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst deleteNoteService = async (id, title) => {\n  const response = await fetch(process.env.REACT_APP_NOTE_DELETE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ eventID: id, noteTitle: title }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst deleteMealService = async (id, title) => {\n  const response = await fetch(process.env.REACT_APP_NOTE_DELETE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ eventID: id, noteTitle: title }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst deleteGuestService = async (id, name) => {\n  const response = await fetch(process.env.REACT_APP_GUEST_DELETE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ eventID: id, guestName: name }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst createNewNoteService = async (id, titleValue, bodyValue) => {\n  const response = await fetch(process.env.REACT_APP_CREATE_NOTE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      eventID: id,\n      noteTitle: titleValue,\n      noteBody: bodyValue,\n    }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst createNewGuestService = async (id, nameValue, seatValue) => {\n  const response = await fetch(process.env.REACT_APP_CREATE_GUEST_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      eventID: id,\n      guestName: nameValue,\n      guestSeat: seatValue,\n    }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst changeDateService = async (id, newDate) => {\n  const response = await fetch(process.env.REACT_APP_CHANGE_DATE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      eventID: id,\n      newDate: newDate,\n    }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst createNewMealService = async (id, serveValue, nameValue) => {\n  const response = await fetch(process.env.REACT_APP_CREATE_MEAL_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      eventID: id,\n      mealServe: serveValue,\n      mealName: nameValue,\n    }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nexport {\n  deleteEventService,\n  createNewEventService,\n  deleteNoteService,\n  createNewNoteService,\n  createNewGuestService,\n  deleteGuestService,\n  changeDateService,\n  createNewMealService,\n};\n"]},"metadata":{},"sourceType":"module"}