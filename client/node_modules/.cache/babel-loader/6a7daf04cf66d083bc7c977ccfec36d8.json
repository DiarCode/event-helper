{"ast":null,"code":"import _regeneratorRuntime from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport useUserData from \"../Hooks/useUserData\";\n\nvar useFetchEventsList = function useFetchEventsList() {\n  var userData = useUserData();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventsList = _useState2[0],\n      setEventsList = _useState2[1];\n\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n\n    function _getData() {\n      _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(process.env.REACT_APP_EVENTS_LIST_FETCH_URL, {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    userID: userData && userData.userID\n                  })\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 2:\n                response = _context.sent;\n                setEventsList(response);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getData.apply(this, arguments);\n    }\n\n    getData();\n  }, []);\n  return eventsList;\n};\n\nexport default useFetchEventsList;","map":{"version":3,"sources":["/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/src/components/Hooks/useFetchEventsList.jsx"],"names":["useEffect","useState","useUserData","useFetchEventsList","userData","eventsList","setEventsList","getData","fetch","process","env","REACT_APP_EVENTS_LIST_FETCH_URL","method","headers","body","JSON","stringify","userID","then","res","json","response"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AAD+B,kBAEKD,QAAQ,EAFb;AAAA;AAAA,MAExBI,UAFwB;AAAA,MAEZC,aAFY;;AAI/BN,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCO,OADD;AAAA;AAAA;;AAAA;AAAA,0EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyBC,KAAK,CAC1BC,OAAO,CAACC,GAAR,CAAYC,+BADc,EAE1B;AACEC,kBAAAA,MAAM,EAAE,MADV;AAEEC,kBAAAA,OAAO,EAAE;AAAE,oCAAgB;AAAlB,mBAFX;AAGEC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,oBAAAA,MAAM,EAAEb,QAAQ,IAAIA,QAAQ,CAACa;AAA/B,mBAAf;AAHR,iBAF0B,CAAL,CAOrBC,IAPqB,CAOhB,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,iBAPa,CADzB;;AAAA;AACQC,gBAAAA,QADR;AAUEf,gBAAAA,aAAa,CAACe,QAAD,CAAb;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAcdd,IAAAA,OAAO;AACR,GAfQ,EAeN,EAfM,CAAT;AAiBA,SAAOF,UAAP;AACD,CAtBD;;AAwBA,eAAeF,kBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useUserData from \"../Hooks/useUserData\";\n\nconst useFetchEventsList = () => {\n  const userData = useUserData();\n  const [eventsList, setEventsList] = useState();\n\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(\n        process.env.REACT_APP_EVENTS_LIST_FETCH_URL,\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ userID: userData && userData.userID }),\n        }\n      ).then(res => res.json());\n\n      setEventsList(response);\n    }\n\n    getData();\n  }, []);\n\n  return eventsList;\n};\n\nexport default useFetchEventsList;\n"]},"metadata":{},"sourceType":"module"}