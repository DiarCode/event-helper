{"ast":null,"code":"import _regeneratorRuntime from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar deleteEventService = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(process.env.REACT_APP_EVENT_DELETE_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function deleteEventService(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar createNewEventService = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(eventName, eventDescription, eventDate, uid) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(process.env.REACT_APP_NEW_EVENT_FETCH_URL, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventName: eventName,\n                eventDescription: eventDescription,\n                eventDate: eventDate,\n                uid: uid\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function createNewEventService(_x2, _x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar deleteNoteService = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, title, body) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"http://localhost:8000/api/events/delete/note\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                eventID: id,\n                noteTitle: title,\n                noteBody: body\n              })\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function deleteNoteService(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport { deleteEventService, createNewEventService, deleteNoteService };","map":{"version":3,"sources":["/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/src/components/Helpers/helperMethods.js"],"names":["deleteEventService","id","fetch","process","env","REACT_APP_EVENT_DELETE_URL","method","headers","body","JSON","stringify","eventID","then","res","json","response","createNewEventService","eventName","eventDescription","eventDate","uid","REACT_APP_NEW_EVENT_FETCH_URL","deleteNoteService","title","noteTitle","noteBody"],"mappings":";;;AAAA,IAAMA,kBAAkB;AAAA,sEAAG,iBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,0BAAb,EAAyC;AACnEC,cAAAA,MAAM,EAAE,MAD2D;AAEnEC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAF0D;AAGnEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,gBAAAA,OAAO,EAAEV;AAAX,eAAf;AAH6D,aAAzC,CAAL,CAIpBW,IAJoB,CAIf,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aAJY,CADE;;AAAA;AACnBC,YAAAA,QADmB;AAAA,6CAOlBA,QAPkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBf,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;AAUA,IAAMgB,qBAAqB;AAAA,uEAAG,kBAC5BC,SAD4B,EAE5BC,gBAF4B,EAG5BC,SAH4B,EAI5BC,GAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMLlB,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYiB,6BAAb,EAA4C;AACtEf,cAAAA,MAAM,EAAE,MAD8D;AAEtEC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAF6D;AAGtEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBO,gBAAAA,SAAS,EAAEA,SADQ;AAEnBC,gBAAAA,gBAAgB,EAAEA,gBAFC;AAGnBC,gBAAAA,SAAS,EAAEA,SAHQ;AAInBC,gBAAAA,GAAG,EAAEA;AAJc,eAAf;AAHgE,aAA5C,CAAL,CASpBR,IAToB,CASf,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aATY,CANK;;AAAA;AAMtBC,YAAAA,QANsB;AAAA,8CAiBrBA,QAjBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBC,qBAAqB;AAAA;AAAA;AAAA,GAA3B;;AAoBA,IAAMM,iBAAiB;AAAA,uEAAG,kBAAOrB,EAAP,EAAWsB,KAAX,EAAkBf,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDN,KAAK,CAAC,8CAAD,EAAiD;AAC3EI,cAAAA,MAAM,EAAE,MADmE;AAE3EC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB,eAFkE;AAG3EC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,gBAAAA,OAAO,EAAEV,EAAX;AAAeuB,gBAAAA,SAAS,EAAED,KAA1B;AAAiCE,gBAAAA,QAAQ,EAAEjB;AAA3C,eAAf;AAHqE,aAAjD,CAAL,CAIpBI,IAJoB,CAIf,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aAJY,CADC;;AAAA;AAClBC,YAAAA,QADkB;AAAA,8CAOjBA,QAPiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBO,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AAUA,SAAStB,kBAAT,EAA6BgB,qBAA7B,EAAoDM,iBAApD","sourcesContent":["const deleteEventService = async id => {\n  const response = await fetch(process.env.REACT_APP_EVENT_DELETE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ eventID: id }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst createNewEventService = async (\n  eventName,\n  eventDescription,\n  eventDate,\n  uid\n) => {\n  const response = await fetch(process.env.REACT_APP_NEW_EVENT_FETCH_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      eventName: eventName,\n      eventDescription: eventDescription,\n      eventDate: eventDate,\n      uid: uid,\n    }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nconst deleteNoteService = async (id, title, body) => {\n  const response = await fetch(\"http://localhost:8000/api/events/delete/note\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ eventID: id, noteTitle: title, noteBody: body }),\n  }).then(res => res.json());\n\n  return response;\n};\n\nexport { deleteEventService, createNewEventService, deleteNoteService };\n"]},"metadata":{},"sourceType":"module"}