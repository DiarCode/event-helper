{"ast":null,"code":"import _regeneratorRuntime from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\nimport { storage } from \"../../firebase/firebase.config\";\n\nfunction uploadAndGetURL(_x) {\n  return _uploadAndGetURL.apply(this, arguments);\n}\n\nfunction _uploadAndGetURL() {\n  _uploadAndGetURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n    var storageRef, imageURL;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            storageRef = ref(storage, \"/adviceImages/\".concat(file.name + v4()));\n\n            if (file) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", alert(\"No file uploaded\"));\n\n          case 3:\n            _context.next = 5;\n            return uploadBytes(storageRef, file).then(function () {\n              return getDownloadURL(storageRef).then(function (url) {\n                alert(\"Successfully uploaded!\");\n                return url;\n              }).catch(function (error) {\n                return console.log(error);\n              });\n            }).catch(function (error) {\n              return console.log(error);\n            });\n\n          case 5:\n            imageURL = _context.sent;\n            return _context.abrupt(\"return\", imageURL);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _uploadAndGetURL.apply(this, arguments);\n}\n\nexport { uploadAndGetURL };","map":{"version":3,"sources":["/Users/diarbegisbayev/Desktop/Back-end/event-helper/client/src/components/Helpers/adminHelperMethods.js"],"names":["getDownloadURL","ref","uploadBytes","v4","storage","uploadAndGetURL","file","storageRef","name","alert","then","url","catch","error","console","log","imageURL"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,GAAzB,EAA8BC,WAA9B,QAAiD,kBAAjD;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,OAAT,QAAwB,gCAAxB;;SAEeC,e;;;;;8EAAf,iBAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,UADR,GACqBN,GAAG,CAACG,OAAD,0BAA2BE,IAAI,CAACE,IAAL,GAAYL,EAAE,EAAzC,EADxB;;AAAA,gBAEOG,IAFP;AAAA;AAAA;AAAA;;AAAA,6CAEoBG,KAAK,CAAC,kBAAD,CAFzB;;AAAA;AAAA;AAAA,mBAIyBP,WAAW,CAACK,UAAD,EAAaD,IAAb,CAAX,CACpBI,IADoB,CACf,YAAM;AACV,qBAAOV,cAAc,CAACO,UAAD,CAAd,CACJG,IADI,CACC,UAAAC,GAAG,EAAI;AACXF,gBAAAA,KAAK,CAAC,wBAAD,CAAL;AACA,uBAAOE,GAAP;AACD,eAJI,EAKJC,KALI,CAKE,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,eALP,CAAP;AAMD,aARoB,EASpBD,KAToB,CASd,UAAAC,KAAK;AAAA,qBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,aATS,CAJzB;;AAAA;AAIQG,YAAAA,QAJR;AAAA,6CAeSA,QAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBA,SAASX,eAAT","sourcesContent":["import { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\nimport { storage } from \"../../firebase/firebase.config\";\n\nasync function uploadAndGetURL(file) {\n  const storageRef = ref(storage, `/adviceImages/${file.name + v4()}`);\n  if (!file) return alert(\"No file uploaded\");\n\n  const imageURL = await uploadBytes(storageRef, file)\n    .then(() => {\n      return getDownloadURL(storageRef)\n        .then(url => {\n          alert(\"Successfully uploaded!\");\n          return url;\n        })\n        .catch(error => console.log(error));\n    })\n    .catch(error => console.log(error));\n\n  return imageURL;\n}\n\nexport { uploadAndGetURL };\n"]},"metadata":{},"sourceType":"module"}